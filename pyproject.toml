[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "littoral_cloud_impute"
version = "0.1.0"
description = "Cloud imputation and shoreline analysis pipeline"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["cloud imputation", "satellite imagery", "shoreline analysis"]
authors = [
    { name = "Walter Zesk", email = "walter@littor.al" },
    { name = "Philip Ndikum", email = "philip-ndikum@users.noreply.github.com" }
]
dependencies = [
    # Core scientific computing
    "numpy>=1.21.0",      # Array operations and numerical computing
    "scipy>=1.13.1",      # Scientific computing tools

    # Image processing and computer vision
    "pillow>=9.0.0",      # Image I/O and basic processing
    "omnicloudmask>=0.1.0", # Cloud detection model
    "rasterio>=1.4.3",    # Geospatial raster data handling

    # Deep learning
    "torch>=2.0.0",       # PyTorch for deep learning
    "transformers>=4.30.0", # Hugging Face Transformers (for Prithvi-EO-2.0)
    "timm>=1.0.12",       # PyTorch image models

    # Data handling
    "pandas>=2.0.0",      # Data manipulation and analysis
    "pyyaml>=6.0",        # YAML file handling for configs
]

[project.optional-dependencies]
dev = [
    # Code quality and formatting
    "black>=23.0.0",      # Code formatting
    "ruff>=0.1.0",        # Fast Python linter
    "mypy>=1.0.0",        # Static type checking
    "isort>=5.12.0",      # Import sorting

    # Testing
    "pytest>=7.0.0",      # Testing framework
    "pytest-cov>=4.1.0",  # Test coverage reporting

    # Development workflow
    "commitizen>=3.12.0", # Standardized commit messages
    "pre-commit>=3.5.0",  # Git hooks management
    "cz-conventional-changelog>=3.3.0",  # Conventional changelog

    # Documentation
    "sphinx>=7.0.0",      # Documentation generator
    "sphinx-rtd-theme>=2.0.0"  # Documentation theme
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_scheme = "semver"
update_changelog_on_bump = true
major_version_zero = true

[tool.ruff]
line-length = 120
select = ["E", "F", "W", "I", "D", "N"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q"
